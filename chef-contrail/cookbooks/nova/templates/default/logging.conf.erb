[loggers]
keys = root, nova

[handlers]
keys = stderr, stdout, watchedfile, syslog, null

[formatters]
keys = context, default

[logger_root]
level = WARNING
handlers = null

[logger_nova]
level = INFO
handlers = stderr
qualname = nova

[logger_amqplib]
level = <%= node['nova']['amqplib']['loglevel'] %>
handlers = stderr
qualname = amqplib

[logger_sqlalchemy]
level = <%= node['nova']['sqlalchemy']['loglevel'] %>
handlers = stderr
qualname = sqlalchemy
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARNING" logs neither.  (Recommended for production systems.)

[logger_boto]
level = <%= node['nova']['boto']['loglevel'] %>
handlers = stderr
qualname = boto

[logger_suds]
level = <%= node['nova']['suds']['loglevel'] %>
handlers = stderr
qualname = suds

[logger_eventletwsgi]
level = <%= node['nova']['eventletwsgi']['loglevel'] %>
handlers = stderr
qualname = eventlet.wsgi.server

[handler_stderr]
class = StreamHandler
args = (sys.stderr,)
formatter = context

[handler_stdout]
class = StreamHandler
args = (sys.stdout,)
formatter = context

[handler_watchedfile]
class = handlers.WatchedFileHandler
args = ('nova.log',)
formatter = context

[handler_syslog]
class = handlers.SysLogHandler
args = ('/dev/log', handlers.SysLogHandler.LOG_USER)
formatter = context

[handler_null]
class = nova.openstack.common.log.NullHandler
formatter = default
args = ()

[formatter_context]
class = nova.openstack.common.log.ContextFormatter

[formatter_default]
format = %(message)s
