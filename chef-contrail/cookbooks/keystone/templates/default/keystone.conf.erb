[DEFAULT]
bind_host = <%= node['openstack_config']['keystone_listen'] %>
public_port = <%= node['openstack_config']['keystone']['public_port'] %>
admin_port = <%= node['openstack_config']['keystone']['admin_port'] %>
admin_token = <%= node['keystone']['admin_token'] %>
compute_port = <%= node['keystone']['compute_port'] %>
verbose = <%= node['openstack_config']['service']['keystone']['verbose'] %>
debug = <%= node['openstack_config']['service']['keystone']['debug'] %>
log_file = <%= node['keystone']['log_file'] %>

# ================= Syslog Options ============================
# Send logs to syslog (/dev/log) instead of to file specified
# by `log-file`
use_syslog = <%= node['keystone']['use_syslog'] %>


# Facility to use. If unset defaults to LOG_USER.
# syslog_log_facility = <%= node['keystone']['syslog_log_facility'] %>

[sql]
connection = <%= OCS.sql_string(node, 'keystone') %>
idle_timeout = <%= node['keystone']['sql']['idle_timeout'] %>
min_pool_size = <%= node['keystone']['sql']['min_pool_size'] %>
max_pool_size = <%= node['keystone']['sql']['max_pool_size'] %>
pool_timeout = <%= node['keystone']['sql']['pool_timeout'] %>

[ldap]
#url = ldap://localhost
#tree_dn = dc=example,dc=com
#user_tree_dn = ou=Users,dc=example,dc=com
#role_tree_dn = ou=Roles,dc=example,dc=com
#tenant_tree_dn = ou=Groups,dc=example,dc=com
#user = dc=Manager,dc=example,dc=com
#password = freeipa4all
#suffix = cn=example,cn=com

[identity]
driver = keystone.identity.backends.sql.Identity

[catalog]
<% if node['keystone'].has_key? 'catalog' and not node['keystone']['catalog']['db_backed']  %>
driver = keystone.catalog.backends.templated.TemplatedCatalog
template_file = <%= node['keystone']['catalog']['template_file'] %>
<% else %>
driver = keystone.catalog.backends.sql.Catalog
<% end %>

[trust]
driver = keystone.trust.backends.sql.Trust

[auth]
methods = password,token
password = keystone.auth.plugins.password.Password
token = keystone.auth.plugins.token.Token

[signing]
token_format = UUID

[token]
driver = keystone.token.backends.sql.Token

# Amount of time a token should remain valid (in seconds)
expiration = <%= node['keystone']['token']['expiration'] %>

[policy]
driver = keystone.policy.backends.rules.Policy

[ec2]
driver = keystone.contrib.ec2.backends.sql.Ec2

[filter:debug]
paste.filter_factory = keystone.common.wsgi:Debug.factory

[filter:token_auth]
paste.filter_factory = keystone.middleware:TokenAuthMiddleware.factory

[filter:admin_token_auth]
paste.filter_factory = keystone.middleware:AdminTokenAuthMiddleware.factory

[filter:xml_body]
paste.filter_factory = keystone.middleware:XmlBodyMiddleware.factory

[filter:json_body]
paste.filter_factory = keystone.middleware:JsonBodyMiddleware.factory

[filter:crud_extension]
paste.filter_factory = keystone.contrib.admin_crud:CrudExtension.factory

[filter:ec2_extension]
paste.filter_factory = keystone.contrib.ec2:Ec2Extension.factory

[filter:s3_extension]
paste.filter_factory = keystone.contrib.s3:S3Extension.factory

[app:public_service]
paste.app_factory = keystone.service:public_app_factory

[app:admin_service]
paste.app_factory = keystone.service:admin_app_factory

[pipeline:public_api]
pipeline = token_auth admin_token_auth xml_body json_body debug ec2_extension public_service

[pipeline:admin_api]
pipeline = token_auth admin_token_auth xml_body json_body debug ec2_extension s3_extension crud_extension admin_service

[app:public_version_service]
paste.app_factory = keystone.service:public_version_app_factory

[app:admin_version_service]
paste.app_factory = keystone.service:admin_version_app_factory

[pipeline:public_version_api]
pipeline = xml_body public_version_service

[pipeline:admin_version_api]
pipeline = xml_body admin_version_service

[app:service_v3]
paste.app_factory = keystone.service:v3_app_factory

[pipeline:api_v3]
pipeline = token_auth admin_token_auth xml_body json_body debug ec2_extension s3_extension crud_extension service_v3

[composite:main]
use = egg:Paste#urlmap
/v2.0 = public_api
/ = public_version_api
/v3 = api_v3
/identity/main/v2.0 = public_api
/identity/main/ = public_version_api

[composite:admin]
use = egg:Paste#urlmap
/v2.0 = admin_api
/ = admin_version_api
/v3 = api_v3
/identity/admin/v2.0 = admin_api
/identity/admin/ = admin_version_api
